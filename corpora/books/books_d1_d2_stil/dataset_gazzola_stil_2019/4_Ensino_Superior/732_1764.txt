 Foram avaliados os seguintes algoritmos de agrupamento:
Em testes preliminares o que apresentou melhores resultados, no nosso caso gerou grupos mais balanceados foi o K-means. Portanto este algoritmo foi utilizado em todos os experimentos subsequentes. Este experimento visa medir o desempenho dos métodos proposto. Como podemos ver o método de agrupamento foi o pior, isto se deve ao fato dos grupos gerados serem desbalanceados, desta forma a distribuição de carga não é igual entre todas as maquinas do cluster. Enquanto isso o método de geração de partições aleatórias obteve um bom desempenho, principalmente quando geramos um arquivo para cada processador do cluster e piorando quando geramos mais arquivos. Finalmente, o método de agrupamento com cortes apresentou os melhores resultados quando geramos um grande número de arquivos, provavelmente porque apesar de menores os arquivos são mais "coesos" e tomam proveito da cache. Vale lembrar que o depois de gerar os grupos este método realiza um corte dividindo os arquivos grandes, desta forma gerando um número maior de arquivos a serem processados. Nesta seção medimos o aproveitamento da cache por cada método, como esperado os métodos que utilizam o K-means apresentam os melhores resultado enquanto que o método de particionamento aleatório tende a piorar seus resultados conforme o número de grupos aumenta. A seguir apresentamos os dados referentes a distribuição das instancias nos grupos, analisando o tamanho máximo e mínimo dos grupos gerados pelos métodos propostos. No gráfico que mede tamanho máximo dos grupos gerados podemos notar que o método de agrupamento por similaridade não é boa alternativa, pois não distribui os dados de forma adequada. Enquanto isso o método de agrupamento com cortes acaba distribuindo melhor as instâncias o que aliado a boa utilização da cache explica seu bom desempenho nos nossos experimentos. A avaliação experimental realizada consiste em tomar vantagem da relação temporal da coleção de dados utilizada como forma de obter particionamentos mais coesos. Realizamos dois tipos de experimentos:
O objetivo das duas configurações é verificar se as podas por suporte e confiança aumentam a utilização do cache de regras.