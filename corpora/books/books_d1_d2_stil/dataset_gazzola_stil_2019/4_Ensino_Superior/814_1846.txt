 Até agora, as implementações mais famosas de bancos de dados temporais foram escritas para bancos de dados SQL ou XML (Wang and Zaniolo 2008) (Wang, Zaniolo, and Zhou 2008). Neste projeto, introduzimos funções temporais para um banco de dados NoSQL orientado a documentos ("schemaless"). Esse novo banco de dados traz grandes benefícios para a área de bancos de dados e significa um avanço nos bancos de dados NoSQL pois permite unir todas as vantagens e tendências dos bancos NoSQL com as vantagens de um banco de dados temporal. Dessa forma, torna possível, por exemplo, lidar com grandes volumes de dados temporais através de fácil particionamento horizontal usufruindo de toda a flexibilidade de utilizar em esquema não rígido, que pode sofrer mutações com o tempo se adequando ao contexto do tempo em que o dado existe. Com relação à implementação das características temporais, existem algumas questões que os gerenciadores de bancos de dados precisam resolver. Regras de restrição de integridade referencial (chave estrangeira) são um pouco mais complexas, quando um registro é removido em cascata em bancos de dados temporais relacionais. Neste caso, registros em estados antigos da base podem referenciar o dado atual a ser removido; tais registros não podem ser removidos em cascata uma vez que serão necessários para consultar um estado antigo da base. Essas questões de restrição de integridade não são um problema para bancos de dados NoSQL orientados a documentos porque esse tipo de banco não suporta chaves estrangeiras. Outra questão relevante na implementação de um banco de dados temporal é a eficiência das consultas de agregação, que normalmente são caras porque precisam de relacionar os dados recuperados na consulta. Por exemplo, suponha um banco de dados de funcionários, a tarefa de calcular a média do salário dos funcionários para cada departamento é custosa. É necessário recuperar todos os funcionários, agrupar por departamento, em seguida somar os valores dos salários por grupo e dividir pelo número de funcionários de cada grupo. Em um banco de dados temporal, o custo é ainda maior porque antes de realizar esses procedimentos é necessário descobrir quais registros do banco são pertinentes no período de tempo especificado.