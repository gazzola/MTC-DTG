 Processamento de Dados Massivos/O ambiente Hadoop
= Hadoop =
Apesar da importância conceitual dos trabalhos sobre o Google File System e o modelo MapReduce, o sistema descrito pelos autores se manteve propriedade única da Google, não tendo sido distribuído externamente. Isso mudou apenas com a divulgação do Hadoop, um ambiente de código aberto que implementa os princípios daqueles dois sistemas de forma bastante aproximada, apesar de algumas diferenças. Hadoop foi desenvolvido originalmente por Michael J. Cafarella e Doug Cutting, este último funcionário da Yahoo!. Com o passar do tempo, o projeto passou a ser hospedado pela Apache Software Foundation e vem recebendo contribuições de diversas fontes, principalmente da própria Yahoo! . As principais diferenças entre Hadoop e o modelo original da Google são a linguagem (Hadoop é escrito em Java, enquanto GFS/MR são escritos em C/C++) e o fato do HDFS não permitir a operação de escrita ao fim de arquivos já criados ("append"). No HDFS, arquivos só podem ser abertos para escrita quando de sua criação; depois disso se tornam apenas de leitura. Essas duas diferenças acarretam algumas outras, como a mudança da interface de programação, uma maior amarração entre a interface do sistema de arquivos HDFS e classes Java para o processamento dos conteúdo dos arquivos em função do tipo do conteúdo e uma extensão do modelo de entrada para lidar com diretórios (usar todos os arquivos em um diretório como entrada) ao invés de apenas arquivos isolados. Esta última alteração se deve a uma simplificação do HDFS relacionada à forma de atualização de arquivos. Normalmente, ao final de uma aplicação MapReduce, cada nó que executa uma tarefa de redução gera um arquivo de saída independente, numerado em função dos nós participantes da aplicação. Isso porque o HDFS não permite que diversos processos escrevam em um mesmo arquivo em paralelo. Já que a saída das aplicações gera arquivos dessa forma, a entrada do programa também aceita a indicação de um diretório, de forma que a saída de uma aplicação possa ser usada como entrada para outras.