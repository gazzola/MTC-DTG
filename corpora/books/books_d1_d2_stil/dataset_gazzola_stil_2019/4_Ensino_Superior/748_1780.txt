 Além disso, é importante manter em mente que a comunicação entre unidades em um mesmo "rack" pode se dar a uma velocidade maior que entre máquinas de "racks" diferentes, uma vez que a capacidade dos "links" que ligam os "switches" TOR ao "backbone" é quase sempre menor que a capacidade agregada das máquinas em um rack. Por exemplo, um "rack" pode ter de 20 a 40 máquinas, cada uma com pelo menos uma interface Ethernet Gigabit. Usualmente, a conexão dos TORs para o "backbone" não passará de quatro "links" de 1 Gbps ou, no máximo, um "link" de 10 Gbps. Para tornar as coisas ainda mais desafiadoras, por serem equipamentos semelhantes e sem recursos especiais para tolerância a falhas, qualquer elemento (computadores e "switches") pode falhar a qualquer instante. De fato, dado o grande número de equipamentos normalmente agrupados em um "datacenter", as chances de alguma falha ocorrer é relativamente alta. Qualquer solução de armazenamento e processamento nesse caso deve ser capaz de lidar com falhas de forma transparente para o usuário. Considerando-se essa arquitetura, para garantir o melhor desempenho durante o processamento, dados devem ser distribuídos entre os discos das diversas máquinas de forma que possam ser lidos em paralelo, para serem processados também em paralelo. Apesar de algumas soluções mais simples deixarem a tarefa de organizar os dados dessa forma a cabo do usuário, idealmente essa funcionalidade deve ser oferecida por um sistema de armazenamento distribuído. Historicamente, sistemas de arquivo paralelos  foram desenvolvidos para esse fim no contexto de sistema de processamento de alto desempenho (HPC). Entretanto, no contexto de dados massivos, observou-se que os padrões de acesso aos dados tendem a ser mais simples que nos ambientes de HPC e soluções particulares têm se mostrado mais adequadas nesse contexto . O modelo mais adotado para esse fim tem sido o modelo proposto pelo Google File System (GFS)  e também implementado pelo Hadoop File System (HDFS) . No Google File System, arquivos são escritos sequencialmente quando criados, ou dados são acrescentados sequencialmente ao final de um arquivo já existente ("append").