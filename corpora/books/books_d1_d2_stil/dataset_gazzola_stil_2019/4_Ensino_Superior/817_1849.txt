 Nos últimos anos, entretanto, o pensamento "one size fits all" fez com que a forma de armazenamento de dados fosse repensada, tanto no meio acadêmico quanto no meio empresarial. Isso encadeou o surgimento de uma grande variedade de bancos de dados alternativos. Essas alternativas são frequentemente generalizadas como NoSQL, que tem como característica usarem esquemas não relacionais (Obasanjo 2009). Apesar de ser uma tecnologia relativamente nova, NoSQL é significativo por ser uma abordagem frequente de bancos de dados para computação em nuvem e em sistemas de grande volumes de dados (Lee, Tang, and Choi 2012). A alta taxa de adoção dos bancos NoSQL em sistemas de computação em nuvem pode ser explicada principalmente pela alta facilidade de fazer "sharding" nesses bancos, o que possibilita dividir o armazenamento dos dados em várias máquinas de maneira mais simples do que nos bancos de dados relacionais, que normalmente exigem uma remodelagem agressiva do esquema para realizar o "sharding". Conforme apresentado neste capítulo, estudos sobre banco de dados temporais estão bem consolidados e estudos de banco de dados não relacionais têm sido realizados em diversos trabalhos. Entretanto, as duas áreas não são estudadas em conjunto. Especificamente, este trabalho teve por finalidade definir e implementar um arcabouço de banco de dados temporal em uma estrutura de dados NoSQL orientada a documentos. É importante ressaltar que esta é a primeira vez que esta combinação de estudos foi feita. Obteve-se um arcabouço com alta escalabilidade, fácil particionamento horizontal ("sharding"), modelo de dados flexível ("schemaless") e alto desempenho em consultas temporais de agregação. = Desenvolvimento =
A proposta deste trabalho consiste em criar um banco de dados temporal NoSQL orientado a documentos. O ponto de partida para este trabalho foi o banco de dados "open source" MongoDB. A implementação foi feita através de um "Proxy" do driver de Python (pymongo) para o MongoDB. As rotinas de "UPDATE", "DELETE" e "INSERT" foram reescritas para não apagarem os dados antigos em um comando de atualização ou remoção.