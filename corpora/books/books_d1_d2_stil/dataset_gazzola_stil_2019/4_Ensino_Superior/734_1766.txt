 Processamento de Dados Massivos/Projeto e implementação de aplicações Big Data/Processamento de streams de tweets
=Geeser - A tool for processing raw tweet streams=
Geeser Project intends to give a toolbox for data analyists to work with massive tweet streams in a distributed and scalable environment. For that, Geeser is based on Storm, an open-source fault-tolerant stream processing system. Geeser implements natural language processing activities and simple statistics, such as word counting and trending topics. In this first stage of the project (that is shown here), we are proposing a distributed way to preprocess tweet streams to extract main textual features. More than that, we are showing practical use of Storm stream processing framework in a challenging context. It is import to stress that this project do not aim do optimize or speedup any specific algorithm. My only concern is to make it feasible to run some algorithms in massive streams. Processing tweet streams is a great challenge for data analysts and for Twitters infrastructure as well. Storm was developed specially to tackle the problem of processing such streams. In this context, the amount of messages may vary through time. Consequently, the load of the system is not constant. At this stage it is possible to process each message individually. Then it is quite easy to distribute this algorithm. The challenge here is to minimize bandwidth usage. Another goal is to create a system that is robust enough to hold the unbalanced load through time. Storm is a distributed, fault-tolerant realtime computation system. It was originaly cocieved by Twitter on a successfull attempt to distribute its processing workload. Storm is mainly composed by 2 types of processing units: Bolts and Spouts. Spouts generate streams, while Bolts consume and produce new streams in its output. Its model is similar to the traditional producer-consumer approach seen on early networks applications. The simplicity of producer-consumer aproach works out to be one storm greatest strenghts.